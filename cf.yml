AWSTemplateFormatVersion: '2010-09-09'
Description: Photo Album Web Application Infrastructure

Resources:
  # S3 Bucket
  PhotoBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "images-bucket-54015-cf"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "b1-ass3-cf"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  # IAM Role for Lambda Functions
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: ['sts:AssumeRole']
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: ['logs:*', 's3:*', 'lex:*', 'rekognition:*']
                Resource: '*'

  # Lambda Functions
  IndexPhotosFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "LF1-cf"
      Runtime: "python3.12"
      Handler: "index.handler"
      Code:
        S3Bucket: "code-pipeline-bucket-540"
        S3Key: "indexing-lambda.zip"
      Role: !GetAtt LambdaExecutionRole.Arn

  SearchPhotosFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "search-photos-cf"
      Runtime: "python3.12"
      Handler: "search.handler"
      Code:
        S3Bucket: "code-pipeline-bucket-540"
        S3Key: "search-photos-lambda.zip"
      Role: !GetAtt LambdaExecutionRole.Arn
  
  AIPhotoSearchAPI:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: AIPhotoSearchAPI-cf
      Description: AI Photo Search application API
      Body:
        swagger: "2.0"
        info:
          description: "AI Photo Search application, built during the Cloud and Big Data course at Columbia University."
          version: "1.0.0"
          title: "AI Photo Search"
        host: "n9zu0ufgxh.execute-api.us-east-1.amazonaws.com"
        basePath: "/dev"
        schemes:
          - "https"
        paths:
          /search:
            get:
              operationId: "searchPhotos"
              produces:
                - "application/json"
              parameters:
                - name: "q"
                  in: "query"
                  required: false
                  type: "string"
              responses:
                "200":
                  description: "200 response"
                  schema:
                    $ref: "#/definitions/SearchResponse"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                "500":
                  description: "500 response"
                  schema:
                    $ref: "#/definitions/Error"
                "403":
                  description: "403 response"
                  schema:
                    $ref: "#/definitions/Error"
            options:
              consumes:
                - "application/json"
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                    Access-Control-Allow-Methods:
                      type: "string"
                    Access-Control-Allow-Headers:
                      type: "string"
          /upload/{bucket}/{filename}:
            put:
              produces:
                - "application/json"
              parameters:
                - name: "filename"
                  in: "path"
                  required: true
                  type: "string"
                - name: "bucket"
                  in: "path"
                  required: true
                  type: "string"
                - name: "x-amz-meta-customLabels"
                  in: "header"
                  required: true
                  type: "string"
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                    x-amz-meta-customLabels:
                      type: "string"
            options:
              consumes:
                - "application/json"
              parameters:
                - name: "bucket"
                  in: "path"
                  required: true
                  type: "string"
                - name: "filename"
                  in: "path"
                  required: true
                  type: "string"
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                    Access-Control-Allow-Methods:
                      type: "string"
                    Access-Control-Allow-Headers:
                      type: "string"
        definitions:
          Error:
            type: "object"
            properties:
              code:
                type: "integer"
                format: "int32"
              message:
                type: "string"
          Photo:
            type: "object"
            properties:
              url:
                type: "string"
              labels:
                type: "array"
                items:
                  type: "string"
          SearchResponse:
            type: "object"
            properties:
              results:
                type: "array"
                items:
                  $ref: "#/definitions/Photo"

Outputs:
  FrontendBucketName:
    Value: !Ref FrontendBucket
  PhotoBucketName:
    Value: !Ref PhotoBucket
  IndexPhotosFunctionArn:
    Value: !GetAtt IndexPhotosFunction.Arn
  SearchPhotosFunctionArn:
    Value: !GetAtt SearchPhotosFunction.Arn
  ApiEndpoint:
    Description: Endpoint for accessing the AI Photo Search API
    Value: !Sub 'https://${AIPhotoSearchAPI}.execute-api.${AWS::Region}.amazonaws.com/dev'
